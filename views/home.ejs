<%- include('templates/header.ejs') %>

    <head>
        <link rel="stylesheet" href="style/home.css">
        <script src="https://cdn.countapi.xyz/counter.js"></script>
    </head>

    <body>
        <!-- A button to open the popup form -->
        <button class="open-button" onclick="openForm()">Open Form</button>

        <!-- The form -->
        <div class="form-popup" id="myForm">
            <form class="form-container" id="formGrid">
                <p class="moodTitle">How are you feeling today?</p>
                <div id="moodButton">
                    <button id="moodButtons" type="button" class="redButton"
                        onclick="submitValue('#ff0000'); closeForm(); ">1</button>
                    <button id="moodButtons" type="button" class="orangeButton"
                        onclick="submitValue('#ffa500'); closeForm(); ">2</button>
                    <button id="moodButtons" type="button" class="yellowButton"
                        onclick="submitValue('#dede0c'); closeForm(); ">3</button>
                    <button id="moodButtons" type="button" class="lightGreenButton"
                        onclick="submitValue('#90ee90'); closeForm(); ">4</button>
                    <button id="moodButtons" type="button" class="greenButton"
                        onclick="submitValue('#00e000'); closeForm();">5</button>
                </div>
                <button type="button" class="cancel" onclick="closeForm()">Close</button>
                <button type="button" class="moodDetails" onclick="openDetails()">Colour Details</button>
            </form>
        </div>
        <div id="colorDetails"><pre>
1 = Terrible day.
2 = Bad day.
3 = Neutral day.
4 = Good day.
5 = Amazing day.
        </pre></div>

        <!-- Centering the section with class "daily-quote" -->
        <!-- style height is for changing the size of the webpage -->
        <div class="container d-flex justify-content-center align-items-center" style="height: 15vh;">

        </div>

        <section class="grid-container pb-5" style="position: relative;">
            <!-- Add pb-5 class for padding at the bottom -->
            <p id="quote" style="text-align: center;"></p>
            <p id="author" style="padding: auto; text-align: center;"></p>
            <h2 class="text-center">Recent Posts</h2>
            <!-- Filter Dropdown -->
            <div class="text-center mb-4">
                <label for="postTagFilter" class="mr-2">Filter by Tag:</label>
                <select id="postTagFilter">
                    <option value="all">All</option>
                            <!-- Loop through uniqueTags and create an option for each tag -->
                    <% 
                        // Extract unique postTags
                        const uniqueTags = [...new Set(storyPosts.map(post => post.postTag))];
                        uniqueTags.forEach(function(tag) { 
                    %>
                        <option value="<%= tag %>"><%= tag %></option>
                    <% }); %>
                </select>
            </div> 

        <div class="row" id="postsContainer">
            <% storyPosts.forEach(function(post) { %>
                <div class="col-md-4 mb-4 post-card" data-post-tag="<%= post.postTag %>">
                    <input type="hidden" name="username" value="<%= username %>">
                    <input type="hidden" name="message" value="<%= message %>">
                    <a href="/viewposts?postObjectID=<%= encodeURIComponent(post.postId) %>&username=<%= encodeURIComponent(username) %>&message=<%= encodeURIComponent(message) %>" class="card-link">
                        <div class="card shadow">
                            <div class="card-body">
                                <h5 class="card-title"><%= post.postTitle %></h5>
                                <p class="card-text"><%= post.postTag %></p>
                            </div>
                        </a>
                    </div>
                    <% }); %>
            </div>
        </section>
        <script>

            function submitValue(value) {
                const formData = {
                    colour: value
                };
                // console.log(JSON.stringify(formData));
                console.log(JSON.stringify(formData))

                console.log("test");
                fetch('/saveMood', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                })
                    .then(response => response.text())
                    .then(data => {
                        // console.log(data);
                        alert('Value saved successfully');
                        // closeForm();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while saving value');
                    });
            };
        </script>
        <script>
            //if comment out from here to 91 filter
            function sendColor() {

            }
            function openForm() {
                document.getElementById("myForm").style.display = "block";
            }

            function closeForm() {
                document.getElementById("myForm").style.display = "none";
                document.getElementById("colorDetails").style.display = "none";
            }

            function openDetails() {
                document.getElementById("colorDetails").style.display = "block";
            }

            var slider = document.getElementById("myRange");
            var output = document.getElementById("demo");
            output.innerHTML = slider.value; // Display the default slider value

            // Update the current slider value (each time you drag the slider handle)
            slider.oninput = function () {
                output.innerHTML = this.value;
            }
        </script>
        <script>

            // Tag filter
            document.getElementById('postTagFilter').addEventListener('change', function () {
                const selectedTag = this.value;
                const posts = document.querySelectorAll('.post-card');

                posts.forEach(post => {
                    const postTag = post.getAttribute('data-post-tag');
                    if (selectedTag === 'all' || postTag === selectedTag) {
                        post.style.display = 'block';
                    } else {
                        post.style.display = 'none';
                    }
                });
            });
        </script>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>

            var category = 'inspirational'
            $.ajax({
                method: 'GET',
                url: 'https://api.api-ninjas.com/v1/quotes?category=' + category,
                headers: { 'X-Api-Key': '8blp8mtoceydSVp2wqeILg==hmdrcbahXESxx9aD' },
                contentType: 'application/json',
                success: function (result) {
                    console.log(result);
                    // console.log(result[0].quote);
                    document.getElementById('quote').innerHTML = result[0].quote;
                    // console.log(result[0].author);
                    document.getElementById('author').innerHTML = result[0].author;
                },
                error: function ajaxError(jqXHR) {
                    console.error('Error: ', jqXHR.responseText);
                }

            });

        </script>
        <script>
            function setCookie(name, value, days) {
    var expires = "";
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + (value || "") + expires + "; path=/";
}

// Function to get a cookie value by name
function getCookie(name) {
    var nameEQ = name + "=";
    var cookies = document.cookie.split(';');
    for(var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i];
        while (cookie.charAt(0) == ' ') {
            cookie = cookie.substring(1, cookie.length);
        }
        if (cookie.indexOf(nameEQ) == 0) {
            return cookie.substring(nameEQ.length, cookie.length);
        }
    }
    return null;
}

// Function to track page visits
function trackPageVisits() {
    var visitCount = getCookie('visitCount');
    if (visitCount) {
        visitCount = parseInt(visitCount) + 1;
    } else {
        visitCount = 1;
    }
    setCookie('visitCount', visitCount, 365); // Cookie expires in 365 days
    console.log("Page visits: " + visitCount);
}

// Call trackPageVisits() when the page loads
trackPageVisits();
            </script>
        <%- include('templates/footer.ejs') %>